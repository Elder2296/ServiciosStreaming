
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Calendar;
import java.util.Locale;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author losa
 */
public class UserSuscribe extends javax.swing.JPanel {
    private int rowSelected;
    private DefaultTableModel model;
    private String user="";
    public UserSuscribe() {
        initComponents();
        this.rowSelected=0;
        this.user = "";
        this.model=(DefaultTableModel)suscribeTable.getModel();
        this.filltable();
    }
    private void filltable(){
        Server server=Server.getInstance();
        Calendar calendar=Calendar.getInstance();
        
        String day= Integer.toString(calendar.get(Calendar.DATE));
        String month=Integer.toString(calendar.get(Calendar.MONTH)+1);
        String year=Integer.toString(calendar.get(Calendar.YEAR));
                        
        String date=year+"-"+month+"-"+day;
        
        String sql="SELECT Ser.nombre, S.user, C.nombre1, C.apellido1, S.estado, "
                +" TIMESTAMPDIFF(DAY,\'"+date+"\' ,S.nexpayday) AS \'dias\'"//falta fecha final
                +" FROM Suscriptores as S "
                +" INNER JOIN Servicio AS Ser ON S.idservicios = Ser.id "
                +" INNER JOIN Clientes AS C ON S.idCliente = C.id "
                +"  ORDER BY dias ASC; ";
        
        ResultSet result=server.getResult(sql);
        try{
            while(result.next()){
                String[] row =new String[6];
                    
                row[0]=result.getString(1);
                row[1]=result.getString(2);
                row[2]=result.getString(3);
                row[3]=result.getString(4);
                row[4]=result.getString(5);
                row[5]=result.getString(6);
                
                this.model.addRow(row);
                
                
            }
        
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
        }
        
        this.suscribeTable.setDefaultRenderer(Object.class, new Painter() );
    }
    private void getUser(){
        
        ContactForm contact=new ContactForm();
        contact.filled(this.user);
        contact.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        contact.setVisible(true);
        
        
        
        
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        suscribeTable = new javax.swing.JTable();
        contactButton = new javax.swing.JButton();

        jButton1.setFont(new java.awt.Font("Dialog", 0, 28)); // NOI18N
        jButton1.setText("Pay");

        jButton2.setFont(new java.awt.Font("Dialog", 0, 28)); // NOI18N
        jButton2.setText("Deactivete");

        updateButton.setFont(new java.awt.Font("Dialog", 0, 28)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        suscribeTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Service", "User", "Name", "Last Name", "State", "next payment will be in (days)"
            }
        ));
        suscribeTable.setAutoscrolls(false);
        suscribeTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suscribeTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(suscribeTable);

        contactButton.setFont(new java.awt.Font("Dialog", 0, 28)); // NOI18N
        contactButton.setText("Contact");
        contactButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(contactButton, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(updateButton)
                    .addComponent(contactButton))
                .addContainerGap(24, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        this.model.setRowCount(0);
        this.filltable();
    }//GEN-LAST:event_updateButtonActionPerformed

    private void contactButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactButtonActionPerformed
        // TODO add your handling code here:
        this.getUser();
    }//GEN-LAST:event_contactButtonActionPerformed

    private void suscribeTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suscribeTableMouseClicked
        // TODO add your handling code here:
        this.rowSelected = suscribeTable.rowAtPoint(evt.getPoint());
        int columna = suscribeTable.columnAtPoint(evt.getPoint());
        if ((this.rowSelected > -1) && (columna > -1))
            System.out.println("Fila: "+rowSelected);
            //System.out.println(modelo.getValueAt(fila,columna));
        //System.out.println("Value: "+ this.modelo.getValueAt(rowSelected, 1));
        //System.out.println("Index: "+this.modelo.getValueAt(rowSelected, 0));
        
        try{
            this.user = this.model.getValueAt(this.rowSelected, 1).toString();
        }catch(Exception e){
            System.out.println(e.getMessage());     
        }
        System.out.println(this.user);
        
    }//GEN-LAST:event_suscribeTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton contactButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable suscribeTable;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}

package principal;



import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author losa
 */
public class ConfirmForm extends javax.swing.JFrame {
    private int idcostumer;
    private int idservice;
    private String bienvenida;
    /**
     * Creates new form ConfirmForm
     */
    public ConfirmForm() {
        this.bienvenida="";
        initComponents();
        this.infoField.setLineWrap(true);
        this.infoField.setWrapStyleWord(true);
    }
    public void setData(int idcostumer, int idservice){
        this.idcostumer=idcostumer;
        this.idservice=idservice;
        dataLogin(idservice);
        setLocationRelativeTo(null);
    }
    public void dataLogin(int id){
        this.bienvenida="Bienvenido a los Servicios de Entretenimiento, esperamos que disfrutes de todo"
                + " el entretenimiento que te ofrece tu servicio, estos son los pasos que debes de seguir para utilizar tu servicio"
                + "\n\n1o. Debes iniciar sesión "
                + "\n2o. debe crear su perfil"
                + "\n y listo!!!"
                + "\n\n A continuación te aparecen los datos para iniciar sesion\n\n";
        Server server=Server.getInstance();
        String sql="SELECT email, contrasenia FROM Servicio WHERE id = "+id;
        ResultSet rq=server.getResult(sql);
        try{
            if(rq.next()){
                String email= rq.getString(1);
                String pass= rq.getString(2);
                infoField.setText(this.bienvenida+"Correo:"+email+"   contraseña:"+pass);
                
            }
        
        }catch(SQLException ex){
            
        }
    }
    
    private void SuccesfulSuscribe(){
        Server server=Server.getInstance();
        String user= userField.getText();
        String sql="SELECT * FROM Suscriptores WHERE user =\'"+user+"\'";
        
        ResultSet result=server.getResult(sql);
        
        
        
        try{
            if(result.next()){
                //Debe cambiar de usuario
                alertLabel.setText("usuario existente");
            }else{
                
                if(calendar.getDatoFecha()==null){
                    JOptionPane.showMessageDialog(this, "Select Date","Error",JOptionPane.ERROR_MESSAGE);
                }else{
                    
                    Calendar cal=Calendar.getInstance();
        
                    String day2= Integer.toString(cal.get(Calendar.DATE));
                    String month2=Integer.toString(cal.get(Calendar.MONTH)+1);
                    String year2=Integer.toString(cal.get(Calendar.YEAR));
                    
                    String dt=year2+"-"+month2+"-"+day2;
                    
                    Date fecha = (Date) calendar.getDatoFecha();
            
                    int day=fecha.getDate();
                    int month=fecha.getMonth()+1;
                    int anio=fecha.getYear()+1900;
                    String date=anio+"-"+month+"-"+day;
                    
                    sql="INSERT INTO Suscriptores(user,idservicios,idCliente,fecha,estado,nexpayday) "
                        +"VALUES (\'"+user+"\',"+ this.idservice+","+this.idcostumer+",\'"+dt+"\',\'activo\',\'"+date+"\')";
                    
                    server.getResult(sql);
                    
                    
                    sql="UPDATE Servicio SET activos = activos +"+1+" WHERE id = "+this.idservice;
                    server.getResult(sql);
                    dispose();
                    
                    
                    
            
            //System.out.println(day: "+day+" month: "+month+" anio: "+anio);
                }
                
                
            }
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
        }
        
    }
    
    /*
    if(calendar.getDatoFecha()==null){
            JOptionPane.showMessageDialog(this, "Select Date","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            String dateFormat= "dd MMMM yyyy";
            Date fecha = (Date) calendar.getDatoFecha();
            SimpleDateFormat format= new SimpleDateFormat(dateFormat);
            System.out.println("fecha: "+format.format(fecha));
            System.out.println("fecha2: "+fecha);
        }
    }       
    */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        userField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        calendar = new rojeru_san.componentes.RSDateChooser();
        alertLabel = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoField = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 102, 102));

        jButton1.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton1.setText("CONFIRM");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        jButton2.setText("CANCEL");

        userField.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("Usuario:");

        calendar.setColorBackground(new java.awt.Color(102, 102, 102));

        alertLabel.setForeground(new java.awt.Color(204, 51, 0));

        jButton3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButton3.setText("COPY");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        infoField.setColumns(20);
        infoField.setRows(5);
        infoField.setAutoscrolls(false);
        jScrollPane1.setViewportView(infoField);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(calendar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(28, 28, 28)
                                        .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(alertLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(89, 89, 89)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 524, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(userField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alertLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.SuccesfulSuscribe();
        /*if(calendar.getDatoFecha()==null){
            JOptionPane.showMessageDialog(this, "Select Date","Error",JOptionPane.ERROR_MESSAGE);
        }else{
            String dateFormat= "yy MMMM dd";
            Date fecha = (Date) calendar.getDatoFecha();
            
            int day=fecha.getDate();
            int month=fecha.getMonth()+1;
            int anio=fecha.getYear()+1900;
            
            //System.out.println(day: "+day+" month: "+month+" anio: "+anio);
        }*/
    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String textcopy = infoField.getText();
        StringSelection ss = new StringSelection(textcopy);
        Toolkit tool = Toolkit.getDefaultToolkit();
        Clipboard clip = tool.getSystemClipboard();
        clip.setContents(ss,null);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alertLabel;
    private rojeru_san.componentes.RSDateChooser calendar;
    private javax.swing.JTextArea infoField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField userField;
    // End of variables declaration//GEN-END:variables
}

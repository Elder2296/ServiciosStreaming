package principal;


import java.sql.ResultSet;
import java.sql.SQLException;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author losa
 */
public class ShowServices extends javax.swing.JPanel {
    private int rowSelected;
    private int idservice;
    private DefaultTableModel model;
    public ShowServices() {
        initComponents();
        this.rowSelected=0;
        this.idservice=1;
        this.model = (DefaultTableModel)this.tableServices.getModel();
        this.fillTable("id");
        
    }
    
    private void fillTable(String order){
        Server server = Server.getInstance();
        
        String sql = "SELECT id, nombre,fechaPago, maxactivos, activos FROM Servicio ORDER BY "+ order +" ASC;";
        
        ResultSet result = server.getResult(sql);
        
        try{
            while(result.next()){
                String[] row = new String[5];
                
                row[0] = result.getString(1);
                row[1] = result.getString(2);
                row[2] = result.getString(3);
                row[3] = result.getString(4);
                row[4] = result.getString(5);
                this.model.addRow(row);
                
                
                
            }
        
        }catch(SQLException ex){
        
        }
        this.tableServices.setDefaultRenderer(Object.class, new Painter2() );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableServices = new javax.swing.JTable();
        viewUserButton = new javax.swing.JButton();
        suscribeButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        orderSelect = new javax.swing.JComboBox<>();

        tableServices.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No.", "Tipo de Servicios", "Pago cada", "Max", "Activos"
            }
        ));
        tableServices.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableServicesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableServices);

        viewUserButton.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        viewUserButton.setText("View Users");
        viewUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewUserButtonActionPerformed(evt);
            }
        });

        suscribeButton.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        suscribeButton.setText("Suscribe");
        suscribeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suscribeButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        orderSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Order", "Service", "Day pay" }));
        orderSelect.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                orderSelectItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(viewUserButton)
                .addGap(18, 18, 18)
                .addComponent(suscribeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
            .addGroup(layout.createSequentialGroup()
                .addGap(299, 299, 299)
                .addComponent(orderSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(orderSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewUserButton)
                    .addComponent(suscribeButton)
                    .addComponent(updateButton))
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tableServicesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableServicesMouseClicked
        this.rowSelected = tableServices.rowAtPoint(evt.getPoint());
        
        
        try{
            
            this.idservice= Integer.parseInt( this.model.getValueAt(this.rowSelected, 0).toString());
            
        }catch(Exception e){
            System.out.println(e.getMessage());     
        }
        
    }//GEN-LAST:event_tableServicesMouseClicked

    private void viewUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewUserButtonActionPerformed
        // TODO add your handling code here:
        
        ShowUsers show = new ShowUsers(this.idservice);
        show.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        show.setVisible(true);
    }//GEN-LAST:event_viewUserButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        this.model.setRowCount(0);
        this.fillTable("id");
    }//GEN-LAST:event_updateButtonActionPerformed

    private void orderSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_orderSelectItemStateChanged
        // TODO add your handling code here:
        String option =  orderSelect.getSelectedItem().toString();
        this.model.setRowCount(0);
        System.out.println("Option: "+option);
        if(option.equals("Select Order")){ this.fillTable("id");}
        else if (option.equals("Service")){ this.fillTable("nombre"); }
        else if(option.equals("Day pay")){ this.fillTable("fechaPago");}
        
    }//GEN-LAST:event_orderSelectItemStateChanged

    private void suscribeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suscribeButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suscribeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> orderSelect;
    private javax.swing.JButton suscribeButton;
    private javax.swing.JTable tableServices;
    private javax.swing.JButton updateButton;
    private javax.swing.JButton viewUserButton;
    // End of variables declaration//GEN-END:variables
}
